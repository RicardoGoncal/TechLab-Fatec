name: CI/CD - Build and Deploy to GCP Cluster

# Disparo manual ativado, eventos automáticos desativados
on:
  workflow_dispatch:

jobs:
  # build:
  #   name: Build and Push Docker Images
  #   runs-on: [self-hosted, linux, X64]

  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v3

  #     - name: Debug workspace
  #       run: |
  #         ls -la
  #         pwd

  #     - name: Authenticate with Google Cloud
  #       uses: google-github-actions/auth@v1
  #       with:
  #         credentials_json: ${{ secrets.GCP_SA_KEY }}

  #     - name: Set up Google Cloud SDK
  #       uses: google-github-actions/setup-gcloud@v1
  #       with:
  #         project_id: ${{ secrets.GCP_PROJECT_ID }}

  #     - name: Authenticate Docker to GCP Artifact Registry
  #       run: |
  #         gcloud auth configure-docker us-east1-docker.pkg.dev

  #     - name: Set up Docker Buildx
  #       uses: docker/setup-buildx-action@v2
  #       with:
  #         driver: docker

  #     - name: Build and push backend_omdb Docker image to Artifact Registry
  #       uses: docker/build-push-action@v6
  #       with:
  #         context: ./backend_omdb
  #         file: backend_omdb/Dockerfile
  #         push: true
  #         tags: us-east1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/backend-omdb/fatec-backend-omdb:latest

  #     - name: Build and push backend_pokemon Docker image to Artifact Registry
  #       uses: docker/build-push-action@v6
  #       with:
  #         context: ./backend_pokemon
  #         file: backend_pokemon/Dockerfile
  #         push: true
  #         tags: us-east1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/backend-poke/fatec-backend-poke:latest

  #     - name: Build and push Frontend Docker image to Artifact Registry
  #       uses: docker/build-push-action@v6
  #       with:
  #         context: ./front-end/my-vue-app
  #         file: front-end/my-vue-app/Dockerfile
  #         push: true
  #         tags: us-east1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/frontend/fatec-frontend:latest

  deploy:
    name: Deploy to Kubernetes
    # needs: build  # Só executa após o build
    runs-on: [self-hosted, linux, X64]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          submodules: false

      - name: Install kubectl
        run: gcloud components install kubectl -q

      - name: Authenticate with Service Account
        run: |
          echo "${{ secrets.GCP_SA_KEY }}" | base64 --decode > /tmp/service-account.json
          ##gcloud auth activate-service-account --key-file=/tmp/service-account.json

      - name: Auth GCP Production
        uses: google-github-actions/auth@v1
        with:
          credentials: /tmp/service-account.json

      - name: Get GKE cluster credentials to Production
        uses: google-github-actions/get-gke-credentials@v1
        with:
          cluster_name: ${{ secrets.GCP_K8S_CLUSTER_NAME }}
          location: ${{ secrets.GCP_K8S_ZONE }}
          credentials: /tmp/service-account.json

      # - name: Get Runner Public IP
      #   id: external_ip
      #   uses: haythem/external-ip@v1.2

      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v1
        # with:
        #   version: '390.0.0'
        #   project_id: ${{ secrets.GCP_PROJECT_ID }}
        #   service_account_key: ${{ secrets.GCP_SA_KEY }}
        #   export_default_credentials: true
      
      # - name: Set external IP to be accessed on GKE
      #   run: |
      #     IP_LIST=$(gcloud container clusters describe fatec-gke-cluster --region=us-central1 --format=json | jq -r '.masterAuthorizedNetworksConfig.cidrBlocks[] | .cidrBlock' | tr "\n" ",")
      #     echo "Will be added IP List: ${IP_LIST}"
      #     gcloud container clusters update fatec-gke-cluster --region=us-central1 --enable-master-authorized-networks --master-authorized-networks=${IP_LIST}${{ steps.external_ip.outputs.ipv4 }}/32

      - name: Deploy manifests to Production
        env:
          GOOGLE_APPLICATION_CREDENTIALS: /tmp/service-account.json
        run: |
          mkdir -p $(dirname ${{ env.GOOGLE_APPLICATION_CREDENTIALS }})
          gcloud container clusters get-credentials ${{ secrets.GCP_K8S_CLUSTER_NAME }} --region ${{ secrets.GCP_K8S_ZONE }} --project ${{ secrets.GCP_PROJECT_ID }}
  
      # - name: Authenticate Cluster K8s
      #   run: |
      #     gcloud container clusters get-credentials ${{ secrets.GCP_K8S_CLUSTER_NAME }} --region ${{ secrets.GCP_K8S_ZONE }} --project ${{ secrets.GCP_PROJECT_ID }} --api-version v1beta1

      # - name: Debug Kubernetes
      #   run: |
      #     gcloud container clusters list
      #     gcloud config list
      #     kubectl config view

      # - name: Check connection with Kubernetes
      #   run: |
      #     kubectl get pods -A
      #     kubectl get nodes

      # - name: Install Helm
      #   uses: azure/setup-helm@v3
      #   with:
      #     version: 'v3.12.0'

      # - name: Deploy Backend OMDB with Helm
      #   run: |
      #     cd backend_omdb/kubernetes
      #     helm upgrade --install backend-omdb . --values values.yaml

      # - name: Deploy Backend POKE with Helm
      #   run: |
      #     cd backend_pokemon/kubernetes
      #     helm upgrade --install backend-pokemon . --values values.yaml

      # - name: Remove external IP from GKE
      #   if: always()
      #   run: |
      #     IP_LIST=$(gcloud container clusters describe shipay-production --region=southamerica-east1 --format=json | jq -r '.masterAuthorizedNetworksConfig.cidrBlocks[] | select(.cidrBlock != "${{ steps.external_ip.outputs.ipv4 }}/32") | .cidrBlock' | tr "\n" ",")
      #     echo "Will be added IP List: ${IP_LIST}"
      #     gcloud container clusters update shipay-production --region=southamerica-east1 --enable-master-authorized-networks --master-authorized-networks=${IP_LIST}

